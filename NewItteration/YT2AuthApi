

/*
let testToken
function handleCredentialResponse(response) {
    console.log("Encoded JWT ID token: " + response.credential);
    testToken = response.credential;
}

window.onload = function () {
    myclient = google.accounts.id.initialize({
    client_id: "787718893823-ief5upq817odgurk45ga691p9m3ejd57.apps.googleusercontent.com",
    callback: handleCredentialResponse
    });
    google.accounts.id.renderButton(
    document.getElementById("buttonDiv"),
    { theme: "outline", size: "large" }  // customization attributes
    );
    google.accounts.id.prompt(); // also display the One Tap dialog
}
*/




var client;
var access_token;
var api_key = "AIzaSyA1vxM7_wIUwgdXvmTDa_MSimBUiEeozsE";

function initClient() {
    client = google.accounts.oauth2.initTokenClient({
        client_id: "787718893823-ief5upq817odgurk45ga691p9m3ejd57.apps.googleusercontent.com",
        scope: "https://www.googleapis.com/auth/youtube.force-ssl",
        callback: (tokenresponse) => {
            access_token = tokenresponse.access_token;
        },
    });
}



function initClientServer() {
    client = google.accounts.oauth2.initTokenClient({
        client_id: "787718893823-vc2f0ts3hm6jc4dq3657m3h16vm5t1ge.apps.googleusercontent.com",
        scope: "https://www.googleapis.com/auth/youtube.force-ssl",
        callback: (tokenresponse) => {
            access_token = tokenresponse.access_token;
        },
    });
}

function getToken() {
    client.requestAccessToken();
}
function revokeToken() {
    google.accounts.oauth2.revoke(access_token, () => {console.log('access token revoked')});
}

function test_getSubTitles() {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', 'https://www.googleapis.com/youtube/v3/captions/9P6rdqiybaw' + "&access_token=" + access_token + '&tlang=' + 'en');
    xhr.onreadystatechange = function(e) {
        console.log(xhr.response);
    }
    xhr.send(null);
}


function test2_getSubtitles() {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', "https://youtube.googleapis.com/youtube/v3/captions/9P6rdqiybaw?tlang=en&key="+ api_key)
    xhr.setRequestHeader('Accept', "application/json")
    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token)
    
    xhr.onreadystatechange = function(e) {
        console.log(xhr.response);
    }
    xhr.send(null);
}


function test3_getSubtitles() {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', "https://www.googleapis.com/youtube/v3/captions/9P6rdqiybaw?tlang=en");
    xhr.setRequestHeader('Accept', "application/json");
    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);
    
    xhr.onload = function(e) {
        console.log(xhr.readyState);
        console.log(access_token);
        console.log(xhr.response);
    }
    xhr.send(null);
}



//Part1

/*
var GoogleAuth;
var SCOPE = "https://www.googleapis.com/auth/youtube.force-ssl"

function handleClientLoad() {

    gapi.load('client:auth2', initClient)
}

function initClient() {
    gapi.client.init({
        'apiKey': 'AIzaSyDg6gpX1vRkWQ-d4sWFrJMelJEga2zlNrU',
        'clientId': '787718893823-ief5upq817odgurk45ga691p9m3ejd57.apps.googleusercontent.com',
        'scope': SCOPE
    }).then(function(){
        GoogleAuth = gapi.auth2.getAuthInstance();
        
    })
}



function test3_getSubtitles(){
    var request = client.youtube.captions.download({
        'id': '9P6rdqiybaw',
        'tlang': 'en'
    });

    request.execute(function(response) {
        console.log(response);
    });
}
*/

function list_subtitles() {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", "https://www.googleapis.com/youtube/v3/captions?part=id&videoId=9P6rdqiybaw");
    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);
    xhr.onload = function(e) {
        response = JSON.parse(xhr.response);
        response["items"].map((item)=>{console.log(item["id"])});
    }
    xhr.send(null);
}

async function returnSubtitles(token) {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", "https://youtube.googleapis.com/youtube/v3/captions/TgEjFJuWiw0tUf7sZ-q3K6Nm9HQ?tfmt=ttml&tlang=en&key=" + token, true)
    xhr.onload = function(e) {
        return xhr;
    }
    xhr.send(null); 
    return xhr;
}

function process(val) {
    var xhr = new XMLHttpRequest(val);
    xhr.onload = function(e) {
        response = JSON.parse(xhr.response);
        respone["items"].map((item)=>{console.log(item["id"])});
    }
    xhr.send(null);
}

async function returnSubtitleJson() {
    await fetch("https://youtube.googleapis.com/youtube/v3/captions/UckBoD9o49_iEIEUFrm0baf-0JEbPoP5KbBFMKSCXbc=?tfmt=ttml&tlang=en&key=" + api_key, {
        'credentials': 'include', headers: new Headers(
            {
            'Accept': "application/json", 
            'Authorization': 'Bearer ' + access_token
            })
        }
    )
    .then(res => res.json())
    .then((out)=>{
        console.log('Check this JSON!', out);
    })
    
}

function test4_getSubtitles(access_token) {
    var xhr = new XMLHttpRequest();
    //my vid: UckBoD9o49_iEIEUFrm0baf-0JEbPoP5KbBFMKSCXbc=
    xhr.open('GET', "https://youtube.googleapis.com/youtube/v3/captions/87p0w5zHo4uYl2v_9YX8kX-YUfGHZuI4?tfmt=ttml&tlang=en&key=" + api_key);
    xhr.withCredentials=true;
    xhr.setRequestHeader('Accept', "application/json");
    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);

    xhr.onload = function(e) {
        console.log(xhr.readyState);
        console.log(access_token);
        console.log(xhr.response);
    }
    xhr.send(null);
}



